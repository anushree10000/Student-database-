#include <iostream>
#include <fstream>
#include <string>
#include <sstream>
using namespace std;

struct Student {
    int id;
    string name;
    int age;
    string course;
};

// Function to add student profile
void addStudent() {
    Student s;
    cout << "Enter ID: ";
    cin >> s.id;
    cin.ignore();
    cout << "Enter Name: ";
    getline(cin, s.name);
    cout << "Enter Age: ";
    cin >> s.age;
    cin.ignore();
    cout << "Enter Course: ";
    getline(cin, s.course);

    ofstream file("students.txt", ios::app);
    file << s.id << "," << s.name << "," << s.age << "," << s.course << endl;
    file.close();

    cout << "✅ Student profile added successfully.\n";
}

// Function to display all active students
void displayStudents() {
    ifstream file("students.txt");
    string line;
    cout << "\n--- Active Student Profiles ---\n";
    while (getline(file, line)) {
        cout << line << endl;
    }
    file.close();
}

// Function to soft delete student (move to trash)
void deleteStudent(int id) {
    ifstream file("students.txt");
    ofstream temp("temp.txt");
    ofstream trash("trash.txt", ios::app);

    string line;
    bool found = false;
    while (getline(file, line)) {
        stringstream ss(line);
        string sid;
        getline(ss, sid, ',');
        if (stoi(sid) == id) {
            trash << line << endl; // Move to trash
            found = true;
        } else {
            temp << line << endl; // Keep in students
        }
    }

    file.close();
    temp.close();
    trash.close();

    remove("students.txt");
    rename("temp.txt", "students.txt");

    if (found)
        cout << "🗑️ Student moved to trash.\n";
    else
        cout << "⚠️ Student not found.\n";
}

// Function to recover student from trash
void recoverStudent(int id) {
    ifstream trash("trash.txt");
    ofstream temp("temp.txt");
    ofstream students("students.txt", ios::app);

    string line;
    bool found = false;
    while (getline(trash, line)) {
        stringstream ss(line);
        string sid;
        getline(ss, sid, ',');
        if (stoi(sid) == id) {
            students << line << endl; // Recover to active
            found = true;
        } else {
            temp << line << endl; // Keep in trash
        }
    }

    trash.close();
    temp.close();
    students.close();

    remove("trash.txt");
    rename("temp.txt", "trash.txt");

    if (found)
        cout << "♻️ Student recovered from trash.\n";
    else
        cout << "⚠️ Student not found in trash.\n";
}

// Display trash data
void displayTrash() {
    ifstream file("trash.txt");
    string line;
    cout << "\n--- Trash ---\n";
    while (getline(file, line)) {
        cout << line << endl;
    }
    file.close();
}

int main() {
    int choice, id;
    while (true) {
        cout << "\n===== Student Management System =====\n";
        cout << "1. Add Student\n";
        cout << "2. Display Active Students\n";
        cout << "3. Delete Student (Move to Trash)\n";
        cout << "4. Recover Student from Trash\n";
        cout << "5. Display Trash\n";
        cout << "6. Exit\n";
        cout << "Enter choice: ";
        cin >> choice;

        switch (choice) {
            case 1: addStudent(); break;
            case 2: displayStudents(); break;
            case 3: cout << "Enter ID to delete: "; cin >> id; deleteStudent(id); break;
            case 4: cout << "Enter ID to recover: "; cin >> id; recoverStudent(id); break;
            case 5: displayTrash(); break;
            case 6: cout << "Exiting...\n"; return 0;
            default: cout << "⚠️ Invalid choice!\n";
        }
    }
}
